import{_ as e,o as a,c as o,Q as t}from"./chunks/framework.b3b8d04c.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/use/declare.md","filePath":"guide/use/declare.md","lastUpdated":1699704108000}'),c={name:"guide/use/declare.md"},l=t('<h2 id="基本说明" tabindex="-1">基本说明 <a class="header-anchor" href="#基本说明" aria-label="Permalink to &quot;基本说明&quot;">​</a></h2><h3 id="采集方式" tabindex="-1">采集方式 <a class="header-anchor" href="#采集方式" aria-label="Permalink to &quot;采集方式&quot;">​</a></h3><ul><li>自动采集: SKD 内部对浏览器事件做了监听代理，可以自动采集相关信息</li><li>手动采集: 调用对外暴露的方法手动触发事件采集，见<a href="./../functions/exports">导出项</a></li></ul><h3 id="发送数据" tabindex="-1">发送数据 <a class="header-anchor" href="#发送数据" aria-label="Permalink to &quot;发送数据&quot;">​</a></h3><h4 id="默认发送" tabindex="-1">默认发送 <a class="header-anchor" href="#默认发送" aria-label="Permalink to &quot;默认发送&quot;">​</a></h4><ul><li>SDK 内置发送方式为 navigator.sendBeacon &gt; image &gt; xml<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>发送优先级: <br><code>navigator.sendBeacon</code> 浏览器支持 <code>sendBeacon</code> <code>且</code> 发送数据在 <code>60kb</code> 以内<br><code>image</code> 浏览器不支持 <code>sendBeacon</code> <code>且</code> 发送数据在 <code>2kb</code> 以内<br><code>xml</code> 浏览器不支持 <code>sendBeacon</code> 发送数据大于 <code>2kb</code> <code>或</code> 发送数据大于 <code>60kb</code> <br></p></div></li></ul><h4 id="自定义发送" tabindex="-1">自定义发送 <a class="header-anchor" href="#自定义发送" aria-label="Permalink to &quot;自定义发送&quot;">​</a></h4><ul><li>本地化手动发送(开启 localization 后，手动操作存储在 localStorage 的事件)</li><li>拦截 SDK 对外暴露的发送事件</li></ul><h2 id="导出项" tabindex="-1">导出项 <a class="header-anchor" href="#导出项" aria-label="Permalink to &quot;导出项&quot;">​</a></h2><p>SDK 内部导出了大量的 HOOKS 以提高开发自由度，同时也导出了 SDK 内部的 options，可动态更改此对象；具体请查看<a href="./../functions/exports">导出项</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>导出的钩子是可以被多页面同时调用的，最后触发的顺序会按照初始化的顺序</p></div><p>例如以下场景:</p><ul><li>事件信息加密 (beforeSendData 拦截到事件信息后再 return 新的被加密过的对象)</li><li>发送事件后需交互 (afterSendData)</li><li>动态更改 dns 上报地址 (操作 options.value.dsn = &#39;xxxx&#39;)</li><li>等等</li></ul>',13),d=[l];function i(r,s,n,u,h,p){return a(),o("div",null,d)}const m=e(c,[["render",i]]);export{b as __pageData,m as default};
