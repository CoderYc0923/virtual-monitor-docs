import{_ as t,o as d,c as e,Q as r}from"./chunks/framework.7d807baf.js";const g=JSON.parse('{"title":"options","description":"","frontmatter":{},"headers":[],"relativePath":"guide/use/options.md","filePath":"guide/use/options.md","lastUpdated":1699704108000}'),o={name:"guide/use/options.md"},a=r('<h1 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h1><table><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>dns</td><td>string</td><td><strong>是</strong></td><td>-</td><td>上报地址,将收集到的数据根据 dns 地址上报到服务端</td></tr><tr><td>appName</td><td>string</td><td><strong>是</strong></td><td>-</td><td>应用名称</td></tr><tr><td>appCode</td><td>string</td><td>否</td><td>-</td><td>应用 code</td></tr><tr><td>appVersion</td><td>string</td><td>否</td><td>-</td><td>应用版本</td></tr><tr><td>userUuid</td><td>string</td><td>否</td><td>-</td><td>用户 id</td></tr><tr><td>debug</td><td>boolean</td><td>否</td><td>false</td><td>是否开启触发事件时控制台输出</td></tr><tr><td>pv</td><td>object/boolean</td><td>否</td><td>false</td><td><strong><em>暂未支持</em></strong></td></tr><tr><td>performance</td><td>object/boolean</td><td>否</td><td>false</td><td><strong><em>暂未支持</em></strong></td></tr><tr><td>error</td><td>object/boolean</td><td>否</td><td>false</td><td>-</td></tr><tr><td>event</td><td>object/boolean</td><td>否</td><td>false</td><td><strong><em>暂未支持</em></strong></td></tr><tr><td>extraInfo</td><td>object</td><td>否</td><td>undefined</td><td>自定义的全局附加参数,在 <code>baseinfo</code> 对象中会带上 <code>extraInfo</code> 对象，如果想要传递一些额外的公共数据可通过此参数附加</td></tr><tr><td>tracesSampleRate</td><td>number</td><td>否</td><td>1</td><td>抽样发送(0-1)</td></tr><tr><td>cacheMaxLength</td><td>number</td><td>否</td><td>5</td><td>上报数据最大缓存数</td></tr><tr><td>cacheWatingTime</td><td>number</td><td>否</td><td>5000</td><td>上报数据最大等待时间(ms)</td></tr><tr><td>ignoreErrors</td><td>Array&lt;string/RegExp&gt;</td><td>否</td><td>[]</td><td>错误类型事件过滤</td></tr><tr><td>ignoreRequest</td><td>Array&lt;string/RegExp&gt;</td><td>否</td><td>[]</td><td>请求类型事件过滤</td></tr><tr><td>scopeError</td><td>boolean</td><td>否</td><td>false</td><td>开启批量错误采集,采集 CD 为每隔 20s</td></tr><tr><td>localization</td><td>boolean</td><td>否</td><td>false</td><td>是否本地,开启本地化后，数据会存储在 localStorage 中化</td></tr><tr><td>sendTypeByXmlBody</td><td>boolean</td><td>否</td><td>false</td><td>是否强制指定发送形式为 xml，body 请求方式</td></tr><tr><td>beforePushEventList</td><td>function</td><td>否</td><td>-</td><td>添加到事件列表前置钩子，可在此对采集到的数据进行自定义增删改查</td></tr><tr><td>beforeSendData</td><td>function</td><td>否</td><td>-</td><td>数据上报前置钩子，可在此对采集到的数据进行自定义增删改查</td></tr><tr><td>afterSendData</td><td>function</td><td>否</td><td>-</td><td>数据上报后置钩子，可在此进行数据上报后的收尾操作</td></tr></tbody></table><h2 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error&quot;">​</a></h2><p>当 error 为 Boolean 类型时其内部所有属性都为此 Boolean 值</p><table><thead><tr><th>属性名</th><th>类型</th><th>是否必填</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>core</td><td>boolean</td><td>否</td><td>false</td><td>是否采集异常数据</td></tr><tr><td>server</td><td>boolean</td><td>否</td><td>false</td><td>是否采集报错接口数据</td></tr></tbody></table>',5),n=[a];function s(i,l,c,h,p,b){return d(),e("div",null,n)}const m=t(o,[["render",s]]);export{g as __pageData,m as default};
